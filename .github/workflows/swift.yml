name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    name: Build and Test on macOS
    runs-on: macos-14 # Using macOS 14 (Sonoma)
    steps:
    - uses: actions/checkout@v3
    - name: Setup Swift
      uses: swift-actions/setup-swift@v1
      with:
        swift-version: "5.9"
    - name: Swift Version
      run: swift --version
    - name: Temporarily modify swift-tools-version
      run: |
        sed -i '' 's/swift-tools-version: 6.0/swift-tools-version: 5.9/' Package.swift
    - name: Temporarily modify test files for Swift 5.9 compatibility
      run: |
        # Replace Testing import with XCTest
        find Tests -name "*.swift" -type f -exec sed -i '' 's/import Testing/import XCTest/' {} \;
        # Replace #expect macros with XCTAssert
        find Tests -name "*.swift" -type f -exec sed -i '' 's/#expect(\(.*\) == \(.*\))/XCTAssertEqual(\1, \2)/' {} \;
        find Tests -name "*.swift" -type f -exec sed -i '' 's/#expect(\(.*\), \(.*\))/XCTAssert(\1, \2)/' {} \;
        find Tests -name "*.swift" -type f -exec sed -i '' 's/#expect(\(.*\))/XCTAssert(\1)/' {} \;
        # Replace @Test with standard XCTest functions
        find Tests -name "*.swift" -type f -exec sed -i '' 's/@Test func test/func test/' {} \;
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
      
  build-linux:
    name: Build and Test on Linux
    runs-on: ubuntu-latest
    container:
      image: swift:5.9-jammy # Using the Swift 5.9 Docker image on Ubuntu 22.04 (Jammy)
    steps:
    - uses: actions/checkout@v3
    - name: Swift Version
      run: swift --version
    - name: Temporarily modify swift-tools-version
      run: |
        sed -i 's/swift-tools-version: 6.0/swift-tools-version: 5.9/' Package.swift
    - name: Temporarily modify test files for Swift 5.9 compatibility
      run: |
        # Replace Testing import with XCTest
        find Tests -name "*.swift" -type f -exec sed -i 's/import Testing/import XCTest/' {} \;
        # Replace #expect macros with XCTAssert
        find Tests -name "*.swift" -type f -exec sed -i 's/#expect(\(.*\) == \(.*\))/XCTAssertEqual(\1, \2)/' {} \;
        find Tests -name "*.swift" -type f -exec sed -i 's/#expect(\(.*\), \(.*\))/XCTAssert(\1, \2)/' {} \;
        find Tests -name "*.swift" -type f -exec sed -i 's/#expect(\(.*\))/XCTAssert(\1)/' {} \;
        # Replace @Test with standard XCTest functions
        find Tests -name "*.swift" -type f -exec sed -i 's/@Test func test/func test/' {} \;
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
      
  docc:
    name: Build and Publish DocC
    needs: [build-macos, build-linux]
    runs-on: macos-14 # Using macOS 14 (Sonoma)
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: "5.9"
      - name: Swift Version
        run: swift --version
      - name: Temporarily modify swift-tools-version
        run: |
          sed -i '' 's/swift-tools-version: 6.0/swift-tools-version: 5.9/' Package.swift
      - name: Temporarily modify test files for Swift 5.9 compatibility
        run: |
          # Replace Testing import with XCTest
          find Tests -name "*.swift" -type f -exec sed -i '' 's/import Testing/import XCTest/' {} \;
          # Replace #expect macros with XCTAssert
          find Tests -name "*.swift" -type f -exec sed -i '' 's/#expect(\(.*\) == \(.*\))/XCTAssertEqual(\1, \2)/' {} \;
          find Tests -name "*.swift" -type f -exec sed -i '' 's/#expect(\(.*\), \(.*\))/XCTAssert(\1, \2)/' {} \;
          find Tests -name "*.swift" -type f -exec sed -i '' 's/#expect(\(.*\))/XCTAssert(\1)/' {} \;
          # Replace @Test with standard XCTest functions
          find Tests -name "*.swift" -type f -exec sed -i '' 's/@Test func test/func test/' {} \;
      
      - name: Build Documentation
        run: |
          swift package --allow-writing-to-directory ./docs generate-documentation \
            --target CSV \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path csv \
            --output-path ./docs
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
